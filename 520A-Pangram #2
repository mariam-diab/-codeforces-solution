#include<iostream>
#include <bits/stdc++.h>
using namespace std;
#define FAST_IO ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);

int main(){
    FAST_IO;
    int n; string word; cin>>n>>word;
    set <char> alpha;
    while(n--){
        if(word[n]>='a' && word[n]<='z') alpha.insert(toupper(word[n]));
        else alpha.insert(word[n]);
    }
    if(alpha.size()!=26) cout<<"NO";
    else cout<<"YES";


}

// The time complexity of this code is O(n log n), 
//where n is the length of the input string, because inserting an element into a set takes O(log n) time, and we do this operation n times. 
//The space complexity of this code is O(k), where k is the number of distinct characters in the input string.
//This solution may be slower than the first soultion due to the overhead of maintaining a balanced binary search tree for the set. 
